<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>java审计1:ModelAttribute</title>
    <url>/2024/10/10/java%E5%AE%A1%E8%AE%A11/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="前言">前言</h2>
<p>本章节是按照 <a
href="https://aluvion.github.io/2019/04/02/%E8%87%AA%E5%8A%A8%E7%BB%91%E5%AE%9A%E6%BC%8F%E6%B4%9E-war%E8%BF%9C%E7%A8%8B%E8%B0%83%E8%AF%95/">文章</a>
进行 <span class="citation"
data-cites="ModelAttribute">@ModelAttribute</span>
功能点的漏洞审计，以及实际debug中各种执行。</p>
<p>程序 shop1.war可以在原博客主中下载。</p>
<span id="more"></span>
<h2 id="配置debug环境">配置debug环境</h2>
<p>tomcat + idea 远程调试代码</p>
<p><strong>1.安装tomcat</strong></p>
<p>• Tomcat 9.x：支持 Java 8、Java 11、Java 17（及更高版本）。</p>
<p>• Tomcat 10.x：要求 Java 11 或更高版本，主要用于支持 Servlet 4.0
规范及其相关特性。</p>
<p>主机里只有1.8，因此我们用的tomcat 9</p>
<p>https://tomcat.apache.org/download-90.cgi</p>
<p>点击如下zip进行下载</p>
<figure>
<img src="../imgs/java%E5%AE%A1%E8%AE%A11/image-20241010202936176.png"
alt="image-20241010202936176" />
<figcaption aria-hidden="true">image-20241010202936176</figcaption>
</figure>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ unzip apache-tomcat-9.0.95.zip</span><br><span class="line"></span><br><span class="line">$ <span class="built_in">cd</span> apache-tomcat-9.0.95/</span><br><span class="line"></span><br><span class="line">$ TC=$(<span class="built_in">pwd</span>)</span><br></pre></td></tr></table></figure>
<p><strong>2.war包存放路径</strong></p>
<p>$TC/webapps/shop-1.0.0.war</p>
<p><strong>3.tomcat开启远程调试端口</strong></p>
<p>修改文件 catalina.sh，在注释后第一行添加如下</p>
<p>CATALINA_OPTS="-Xdebug
-Xrunjdwp:transport=dt_socket,address=<strong>8000</strong>,suspend=n,server=y"</p>
<figure>
<img src="../imgs/java%E5%AE%A1%E8%AE%A11/image-20241010203111195.png"
alt="image-20241010203111195" />
<figcaption aria-hidden="true">image-20241010203111195</figcaption>
</figure>
<p>apache开启与关闭</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="variable">$TC</span>/bin/catalina.sh start</span><br><span class="line"></span><br><span class="line"><span class="variable">$TC</span>/bin/catalina.sh stop</span><br></pre></td></tr></table></figure>
<p>检测调试端口是否开启成功</p>
<p>netstat -tuln | grep 8000</p>
<figure>
<img src="../imgs/java%E5%AE%A1%E8%AE%A11/image-20241010203208761.png"
alt="image-20241010203208761" />
<figcaption aria-hidden="true">image-20241010203208761</figcaption>
</figure>
<p>如果你想url的根路径就是你的war包的话，可以修改/opt/apache-tomcat-9.0.17/conf/server.xml</p>
<blockquote>
<p><Host name="localhost"  appBase="" unpackWARs="true" autoDeploy="true"></p>
<p><Context path="" docBase="/home/student/FSWA/module-2/apache-tomcat-9.0.95/webapps/shop-1.0.0" debug="0" reloadable="true" crossContext="true"/></p>
</blockquote>
<figure>
<img src="../imgs/java%E5%AE%A1%E8%AE%A11/image-20241010203315018.png"
alt="image-20241010203315018" />
<figcaption aria-hidden="true">image-20241010203315018</figcaption>
</figure>
<p>默认web服务开放端口8080</p>
<figure>
<img src="../imgs/java%E5%AE%A1%E8%AE%A11/image-20241010203330170.png"
alt="image-20241010203330170" />
<figcaption aria-hidden="true">image-20241010203330170</figcaption>
</figure>
<p>开启apache后，通过浏览器访问即可</p>
<figure>
<img src="../imgs/java%E5%AE%A1%E8%AE%A11/image-20241010203442840.png"
alt="image-20241010203442840" />
<figcaption aria-hidden="true">image-20241010203442840</figcaption>
</figure>
<p><strong>4.idea2024配置</strong></p>
<p>由于我们是war包，因此得反编译相同结构的java文件内容才行。</p>
<p>如果是当前项目打包好的war放到tomcat中直接debug应该是没啥问题的，但如果是war包反编译弄成java代码后进行debug的话，可能会有行数不一致的情况</p>
<p>在classes文件夹隔壁，新创建一个java文件夹</p>
<p>打开如下设置</p>
<figure>
<img src="../imgs/java%E5%AE%A1%E8%AE%A11/image-20241011145226148.png"
alt="image-20241011145226148" />
<figcaption aria-hidden="true">image-20241011145226148</figcaption>
</figure>
<p>选择刚才新创建的java文件夹，然后按照如下进行设置</p>
<figure>
<img src="../imgs/java%E5%AE%A1%E8%AE%A11/image-20241011145243568.png"
alt="image-20241011145243568" />
<figcaption aria-hidden="true">image-20241011145243568</figcaption>
</figure>
<figure>
<img src="../imgs/java%E5%AE%A1%E8%AE%A11/image-20241011145256100.png"
alt="image-20241011145256100" />
<figcaption aria-hidden="true">image-20241011145256100</figcaption>
</figure>
<p>然后吧classes中所有文件复制过去，把.class文件换成反编译后的.java文件</p>
<p>当然，弄过去后会一堆报错，但实际没关系，关闭语法报错提示正常调试</p>
<figure>
<img src="../imgs/java%E5%AE%A1%E8%AE%A11/image-20241011145327715.png"
alt="image-20241011145327715" />
<figcaption aria-hidden="true">image-20241011145327715</figcaption>
</figure>
<p>java文件滑动条这里右键出来</p>
<figure>
<img src="../imgs/java%E5%AE%A1%E8%AE%A11/1.png"
alt="file://C:/Users/admin/AppData/Local/Temp/.MWY8U2/1.png" />
<figcaption
aria-hidden="true">file://C:/Users/admin/AppData/Local/Temp/.MWY8U2/1.png</figcaption>
</figure>
<p>接下来配置调试器</p>
<figure>
<img src="../imgs/java%E5%AE%A1%E8%AE%A11/image-20241011145449711.png"
alt="image-20241011145449711" />
<figcaption aria-hidden="true">image-20241011145449711</figcaption>
</figure>
<figure>
<img src="../imgs/java%E5%AE%A1%E8%AE%A11/image-20241011145454446.png"
alt="image-20241011145454446" />
<figcaption aria-hidden="true">image-20241011145454446</figcaption>
</figure>
<p>关联到之前apache开放的调试端口</p>
<figure>
<img src="../imgs/java%E5%AE%A1%E8%AE%A11/image-20241011145507746.png"
alt="image-20241011145507746" />
<figcaption aria-hidden="true">image-20241011145507746</figcaption>
</figure>
<h2 id="开始调试">开始调试</h2>
<p>在 Java Web
开发中，框架默认是否开启<strong>参数自动绑定</strong>取决于所使用的框架。Spring
MVC
框架默认开启自动绑定，会根据请求中的参数自动将其绑定到控制器方法中的对象或参数。</p>
<p><strong>对象绑定</strong>：当请求中的参数名与对象的属性名一致时，Spring
MVC 会自动将请求参数的值绑定到对象的对应属性上。例如：</p>
<p>如果请求中有 balance=100 这样的参数，Spring 会将其自动赋值给 user
对象中的 balance 属性。</p>
<figure>
<img src="../imgs/java%E5%AE%A1%E8%AE%A11/image-20241010202743976.png"
alt="image-20241010202743976" />
<figcaption aria-hidden="true">image-20241010202743976</figcaption>
</figure>
<h3 id="buy路径">1.buy路径</h3>
<p>路由中我们看到buy路径有 <span class="citation"
data-cites="ModelAttribute">@ModelAttribute</span> 修饰的对象 user</p>
<figure>
<img src="../imgs/java%E5%AE%A1%E8%AE%A11/image-20241011145557343.png"
alt="image-20241011145557343" />
<figcaption aria-hidden="true">image-20241011145557343</figcaption>
</figure>
<p>这意味着我们能够修改user中的任意属性</p>
<p>我们查看他有哪些属性</p>
<figure>
<img src="../imgs/java%E5%AE%A1%E8%AE%A11/image-20241011145608992.png"
alt="image-20241011145608992" />
<figcaption aria-hidden="true">image-20241011145608992</figcaption>
</figure>
<p>我们能看到代码中有一段使用了setBalance将修改当前的user对象内容。（自动绑定我理解为只是在当前函数中，使用到该参数时，才替换成我们绑定的值，但对象实际的值并不会修改）</p>
<figure>
<img src="../imgs/java%E5%AE%A1%E8%AE%A11/image-20241011145640382.png"
alt="image-20241011145640382" />
<figcaption aria-hidden="true">image-20241011145640382</figcaption>
</figure>
<p>那么我们修改user对象中balance的值，就能够修改当前user.getBalance()的内容了。</p>
<p>当然，源代码中也有对该参数进行禁止绑定的配置，但是能够通过大小写进行绕过。</p>
<figure>
<img src="../imgs/java%E5%AE%A1%E8%AE%A11/image-20241011145652303.png"
alt="image-20241011145652303" />
<figcaption aria-hidden="true">image-20241011145652303</figcaption>
</figure>
<figure>
<img src="../imgs/java%E5%AE%A1%E8%AE%A11/image-20241011145658795.png"
alt="image-20241011145658795" />
<figcaption aria-hidden="true">image-20241011145658795</figcaption>
</figure>
<figure>
<img src="../imgs/java%E5%AE%A1%E8%AE%A11/image-20241011145704590.png"
alt="image-20241011145704590" />
<figcaption aria-hidden="true">image-20241011145704590</figcaption>
</figure>
<h3 id="profile路径">2.profile路径</h3>
<p>除了/buy以外，/profile也使用了 <span class="citation"
data-cites="ModelAttribute">@ModelAttribute</span> 修饰user</p>
<p>并且注意到cart.add中利用user的内容进行添加。</p>
<figure>
<img src="../imgs/java%E5%AE%A1%E8%AE%A11/image-20241011145757832.png"
alt="image-20241011145757832" />
<figcaption aria-hidden="true">image-20241011145757832</figcaption>
</figure>
<p>那么我们把productId为4的flag添加到我们购物车中即可</p>
<figure>
<img src="../imgs/java%E5%AE%A1%E8%AE%A11/image-20241011145807571.png"
alt="image-20241011145807571" />
<figcaption aria-hidden="true">image-20241011145807571</figcaption>
</figure>
<p>还是先debug查看需要什么</p>
<figure>
<img src="../imgs/java%E5%AE%A1%E8%AE%A11/image-20241011145818220.png"
alt="image-20241011145818220" />
<figcaption aria-hidden="true">image-20241011145818220</figcaption>
</figure>
<p>那么我们修改这个id即可，注意User中对cart的赋值使用的是
setCartItems，因此传参的时候，传的是 cartItems（大小写应该无所谓）</p>
<figure>
<img src="../imgs/java%E5%AE%A1%E8%AE%A11/image-20241011145829136.png"
alt="image-20241011145829136" />
<figcaption aria-hidden="true">image-20241011145829136</figcaption>
</figure>
<p>cartItems[0].id=4</p>
<p>因为是get请求，因此需要全部url编码</p>
<figure>
<img src="../imgs/java%E5%AE%A1%E8%AE%A11/image-20241011145841144.png"
alt="image-20241011145841144" />
<figcaption aria-hidden="true">image-20241011145841144</figcaption>
</figure>
<p>（我应该设置的[0]，不过不知道为什么所有item都变了）</p>
<figure>
<img src="../imgs/java%E5%AE%A1%E8%AE%A11/image-20241011145857520.png"
alt="image-20241011145857520" />
<figcaption aria-hidden="true">image-20241011145857520</figcaption>
</figure>
<p>当然，我们也能用post请求</p>
<p>别直接GET改POST，burp中有修改post功能，帮你添加上post需要的字段</p>
<figure>
<img src="../imgs/java%E5%AE%A1%E8%AE%A11/image-20241011145909441.png"
alt="image-20241011145909441" />
<figcaption aria-hidden="true">image-20241011145909441</figcaption>
</figure>
<figure>
<img src="../imgs/java%E5%AE%A1%E8%AE%A11/image-20241011145913975.png"
alt="image-20241011145913975" />
<figcaption aria-hidden="true">image-20241011145913975</figcaption>
</figure>
<figure>
<img src="../imgs/java%E5%AE%A1%E8%AE%A11/image-20241011145923473.png"
alt="image-20241011145923473" />
<figcaption aria-hidden="true">image-20241011145923473</figcaption>
</figure>
<h3 id="注意">注意</h3>
<p>正如之前所说，自动绑定修改的是当前函数修饰的对象所用到的值，对象本身并没改变，因此刷新当前页面就恢复了</p>
<figure>
<img src="../imgs/java%E5%AE%A1%E8%AE%A11/image-20241011145949334.png"
alt="image-20241011145949334" />
<figcaption aria-hidden="true">image-20241011145949334</figcaption>
</figure>
<h2 id="修复">修复</h2>
<ol type="1">
<li></li>
</ol>
<p>使用 DTO 模式，在对象中放入能修改的字段，在后续进行更新</p>
<figure>
<img src="../imgs/java%E5%AE%A1%E8%AE%A11/image-20241011150017124.png"
alt="image-20241011150017124" />
<figcaption aria-hidden="true">image-20241011150017124</figcaption>
</figure>
<p>这样，就不能直接自动绑定到user的balance等字段了。</p>
<ol start="2" type="1">
<li></li>
</ol>
<p><span class="citation"
data-cites="InitBinder">@InitBinder</span>：通过 WebDataBinder 的
setDisallowedFields() 方法指定哪些字段不被绑定。</p>
<p>如源程序中定义了如下</p>
<figure>
<img src="../imgs/java%E5%AE%A1%E8%AE%A11/image-20241011150046952.png"
alt="image-20241011150046952" />
<figcaption aria-hidden="true">image-20241011150046952</figcaption>
</figure>
<p>但是由于大小写原因，使用Balance也能进行绑定。。</p>
<p>虽然也有办法检测传输来的参数然后进行手动验证，但感觉还是dto方式好点，直接禁了</p>
]]></content>
      <tags>
        <tag>java代码审计</tag>
      </tags>
  </entry>
  <entry>
    <title>jolokia exploit</title>
    <url>/2024/11/08/jolokia-exploit1/</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">
  <script id="hbeData" type="hbeData" data-hmacdigest="ebb0fc6572df144d34cb3f534c32435430fedc65cb4ebd7b5b0ed6092dac1492"></script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-default">
      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>
      </label>
    </div>
  </div>
</div>
<script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>java审计</category>
      </categories>
      <tags>
        <tag>java审计</tag>
        <tag>jolokia</tag>
      </tags>
  </entry>
  <entry>
    <title>《动手学深度学习》3.1 线性回归</title>
    <url>/2025/02/25/%E5%8A%A8%E6%89%8B%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A01/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="前言">1前言</h2>
<p>从零开始学习ai文章系列计划是个人在《动手学深度学习》和《磨菇书》两本书的学习中的个人笔记，文章也会以课本中的章节分开，即每个章节一片笔记。我会尽量的把主要内容以及遇到的难点进行记录与解决，如果哪里有错误的可以直接指正。或者不清晰的可以直接查看原文部分。</p>
<span id="more"></span>
<p>《动手学深度学习》原文（课本）：https://tangshusen.me/Dive-into-DL-PyTorch/#/</p>
<p>《动手学深度学习》代码：https://github.com/ShusenTang/Dive-into-DL-PyTorch</p>
<p>（由于有时候公式太多，可能会直接贴图片）</p>
<h2 id="线性回归模型">2 线性回归模型</h2>
<p>线性回归，是一段连续值模型，即<strong>提供任意的(x1,x2,x3...)</strong>，都有其对应的<strong>唯一结果y</strong></p>
<p>线性回归（Linear
Regression）的核心思想就是<strong>找到一条最优的直线来拟合一堆数据点</strong>，使得预测值和真实值之间的误差最小。</p>
<p>假设y是房价，房屋面积是x1，房龄是x2。</p>
<p>其中 w1 和 w2 是权重（weight），b
是偏差（bias），且均为标量。它们是线性回归模型的参数（parameter）。</p>
<p><span class="math display">\[
\hat{y}{}^{(i)}={x}^{(i)}_{1}{w}_{1}+{x}^{(i)}_{2}{w}_{2}+b
\]</span> 假设y是房价，房屋面积是x1，房龄是x2。</p>
<p>其中 <span class="math inline">\({w}_{1}\)</span> 和 <span
class="math inline">\({w}_{2}\)</span> 是权重（weight），<span
class="math inline">\(b\)</span>
是偏差（bias），且均为标量。它们是线性回归模型的参数（parameter）。</p>
<h2 id="模型训练的概念">3.模型训练的概念</h2>
<h3 id="收集训练数据">3.1 收集训练数据</h3>
<p>采集的<strong>样本数为 n</strong>，<strong>索引为 i</strong> 的样本
<span class="math display">\[
\hat{y}{}^{(i)}={x}^{(i)}_{1}{w}_{1}+{x}^{(i)}_{2}{w}_{2}+b
\]</span> ​</p>
<h3 id="损失函数">3.2 损失函数</h3>
<p>所谓的损失，就是模型预测值<span
class="math inline">\(\hat{y}\)</span>与实际值y之间的误差。</p>
<p>即我们当前的$ ({w}<em>{1},{w}</em>{2},b)<span
class="math inline">\(固定情况下，输入\)</span>{x}<em>{1}，{x}</em>{2}<span
class="math inline">\(经过模型计算获得的估计值\)</span>$ 和 样本中 <span
class="math inline">\(({x}_{1},{x}_{2},y)\)</span>中已经有实际的y
之间的误差。</p>
<p>损失函数有许多,
这里使用的<strong>平方误差函数</strong>也称为平方损失（square loss）
<span class="math display">\[
{L}^{(i)}({w}_{1},{w}_{2},b)=\frac {1} {2}(\hat{y}^{(i)}−y(i))^2
\]</span> 由于有n个样本，我们选平均值作为整体的损失函数 <span
class="math display">\[
{L}({w}_{1},{w}_{2},b)
=
\frac {1} {n}\sum ^{n}_{i=1} {L}^{(i)}({w}_{1},{w}_{2},b)
=
\frac {1} {n}\sum ^{n}_{i=1} {\frac {1} {2}(\hat{y}^{(i)}−y^{(i)})^{2} }
\]</span>
在线性回归中使用平方差作为损失函数有很多好处，最重要的一点在于它是一个<strong>凸函数</strong>，这意味着它只有一个最小值，确保了我们可以通过优化算法（如梯度下降）找到最优解。它的导数是连续且容易计算的，这使得求解优化问题变得更简单。</p>
<p>这样我们就能求出最优的参数 <span
class="math inline">\(({w}_{1},{w}_{2},b)\)</span></p>
<h3 id="优化算法">3.3 优化算法</h3>
<p>当模型和损失函数形式较为简单时，上面的<strong>误差最小化问题的解可以直接用公式表达出来</strong>。这类解叫作<strong>解析解（analytical
solution）</strong></p>
<p>然而，大多数深度学习模型并没有解析解，只能<strong>通过优化算法有限次迭代模型参数</strong>来尽可能降低损失函数的值。这类解叫作<strong>数值解（numerical
solution）</strong>。</p>
<p>这里我们通过偏导数对 <span
class="math inline">\(({w}_{1},{w}_{2},b)\)</span> 进行优化，使得模型的
<span class="math inline">\(({w}_{1},{w}_{2},b)\)</span>
越来越接近实际的 <span
class="math inline">\(({w}_{1},{w}_{2},b)\)</span>
，也就是说我们在此通过模型求出它的数值解</p>
<h4 id="对偏导的解释">2.3.1 对偏导的解释</h4>
<p>我们知道一元方程中 <span
class="math inline">\(y=a{x}^{2}\)</span>，x的导数是<span
class="math inline">\(2ax\)</span>，同时也代表着该点<span
class="math inline">\((x,y)\)</span>的斜率是<span
class="math inline">\(2ax\)</span></p>
<figure>
<img
src="../imgs/%E5%8A%A8%E6%89%8B%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A01/image-20250225233408156.png"
alt="image-20250225233408156" />
<figcaption aria-hidden="true">image-20250225233408156</figcaption>
</figure>
<p>在 <span class="math inline">\(x=0\)</span> 处，斜率/导数 <span
class="math inline">\(ax=0\)</span>。这也是该函数最低点。</p>
<p>我们随机在<span class="math inline">\(x&gt;0\)</span>处选取点<span
class="math inline">\(({x}_{1},{y}_{1})\)</span>，此时的斜率 <span
class="math inline">\(2a{x}_{1}&gt;0\)</span>，那么优化更新<span
class="math inline">\({x}_{1}\)</span>的时候 <span
class="math inline">\(({x}_{1})&#39; = {x}_{1} - 2a{x}_{1}\)</span>
的话，$({x}<em>{1})' 必定在x<span
class="math inline">\(1的左侧，即**\)</span>{x}</em>{1}$减去该处的斜率**会向最低点的x==0移动。</p>
<p>在<span class="math inline">\(x&lt;0\)</span>处取值也是同理，<span
class="math inline">\(2a{x}_{1}&lt;0\)</span>，那么<span
class="math inline">\(({x}_{1})&#39; = {x}_{1} - 2a{x}_{1}\)</span>
的话，相当于<span class="math inline">\({x}_{1}\)</span>向右边移动。</p>
<p>那么这里说明一个问题，<strong>我们所求出来的偏导实际上要的只是这个值的正负</strong>，其数值大小并不重要（当然这里y=ax²中，x越大斜率越大的特点能加快到达最小值，但其它函数就不一定了）</p>
<p>倘若该 <span class="math inline">\(({x}_{1},{y}_{1})\)</span>
并非处于最低点的斜率k=0的位置的话，就会不断移动，最终到达该点（收敛）</p>
<p>（当然这就引出局部最优或者未到达局部最优但是斜率为0的位置等问题，应该以后其他课程会解决）</p>
<h3 id="继续">3.3.2 继续</h3>
<p>重新回到本章节的损失函数中，我们的目的是让模型预测的y尽可能接近真实数据<span
class="math inline">\(\hat{y}\)</span>，因此损失越小越好。 <span
class="math display">\[
{L}({w}_{1},{w}_{2},b)
=
\frac {1} {n}\sum ^{n}_{i=1} {L}^{(i)}({w}_{1},{w}_{2},b)
=
\frac {1} {n}\sum ^{n}_{i=1} {\frac {1} {2}(\hat{y}^{(i)}−y^{(i)})^{2} }
\]</span> 再解析y获得如下完整w参数的loss函数（手打公式打麻了）</p>
<figure>
<img
src="../imgs/%E5%8A%A8%E6%89%8B%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A01/image-20250226213039241.png"
alt="image-20250226213039241" />
<figcaption aria-hidden="true">image-20250226213039241</figcaption>
</figure>
<p>上面公式举例对<span
class="math inline">\({w}_{1}\)</span>进行求导，利用链式法则 <span
class="math display">\[
E=L^{(i)}={x}^{(i)}_{1}{w}_{1}+{x}^{(i)}_{2}{w}_{2}+b−y^{(i)}
\]</span></p>
<p><span class="math display">\[
J=E^2
\]</span></p>
<p><span class="math display">\[
\frac {∂J} {∂{w}_{1}}= \frac {∂J} {∂E}*\frac {∂E}
{∂{w}_{1}}=2E*{x}^{(i)}_{1}=2{x}^{(i)}_{1}({x}^{(i)}_{1}{w}_{1}+{x}^{(i)}_{2}{w}_{2}+b−y^{(i)})
\]</span></p>
<p>因此得到如下更新公式（2是常数所以去掉了）</p>
<figure>
<img
src="../imgs/%E5%8A%A8%E6%89%8B%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A01/image-20250226214637799.png"
alt="image-20250226214637799" />
<figcaption aria-hidden="true">image-20250226214637799</figcaption>
</figure>
<p>在上式中，<span class="math inline">\(∣B∣\)</span>
代表每个小批量中的样本个数（批量大小，batch size），<span
class="math inline">\(η\)</span> 称作学习率（learning
rate）并取正数。</p>
<h2 id="线性回归的表示方法">4 线性回归的表示方法</h2>
<h3 id="神经网络图">4.1 神经网络图</h3>
<p>线性回归是一个单层神经网络</p>
<figure>
<img
src="../imgs/%E5%8A%A8%E6%89%8B%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A01/image-20250226215105779.png"
alt="image-20250226215105779" />
<figcaption aria-hidden="true">image-20250226215105779</figcaption>
</figure>
<p>输入<span
class="math inline">\({x}_{1},{x}_{2}\)</span>等参数，接受并输出层o的内部的每个节点计算都类似
<span class="math inline">\(y={x}_{1}{w}_{1}+{x}_{2}{w}_{2}+b\)</span>
,然后改节点的输出为y。</p>
<h3 id="矢量计算表达式">4.2 矢量计算表达式</h3>
<p>举例3个数据，每个数据2个特征，进行如下计算获得3个输出 <span
class="math display">\[
\hat{y}^{(1)}=x^{(1)}_{1}w_{1}+x^{(1)}_{2}w_{1}+b
\\
\hat{y}^{(2)}=x^{(2)}_{1}w_{1}+x^{(2)}_{2}w_{1}+b
\\
\hat{y}^{(3)}=x^{(3)}_{1}w_{1}+x^{(3)}_{2}w_{1}+b
\]</span> 现在，我们将上面3个等式转化成矢量计算。设 <span
class="math display">\[
\mathbf{\hat{y}} = \begin{bmatrix} \hat{y}^{(1)} \\ \hat{y}^{(2)} \\
\hat{y}^{(3)} \end{bmatrix},&amp;\mathbf{X} = \begin{bmatrix}
x^{(1)}_{1}&amp;x^{(1)}_{2} \\ x^{(2)}_{1}&amp;x^{(2)}_{2} \\
x^{(3)}_{1}&amp;x^{(3)}_{2} \end{bmatrix},&amp; \mathbf{w} =
\begin{bmatrix} w_1 \\ w_2  \end{bmatrix}
\]</span> 行列式计算为 <span class="math display">\[
\mathbf{\hat{y}}=\mathbf{X}\mathbf{w}+b
\]</span> 原本的损失函数变成矢量如下</p>
<figure>
<img
src="../imgs/%E5%8A%A8%E6%89%8B%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A01/image-20250226221037001.png"
alt="image-20250226221037001" />
<figcaption aria-hidden="true">image-20250226221037001</figcaption>
</figure>
<p>小批量随机梯度下降的迭代步骤将相应地改写为</p>
<figure>
<img
src="../imgs/%E5%8A%A8%E6%89%8B%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A01/image-20250226221057789.png"
alt="image-20250226221057789" />
<figcaption aria-hidden="true">image-20250226221057789</figcaption>
</figure>
<figure>
<img
src="../imgs/%E5%8A%A8%E6%89%8B%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A01/image-20250226221104631.png"
alt="image-20250226221104631" />
<figcaption aria-hidden="true">image-20250226221104631</figcaption>
</figure>
]]></content>
      <tags>
        <tag>ai</tag>
        <tag>动手学习深度学习</tag>
        <tag>第3节</tag>
      </tags>
  </entry>
  <entry>
    <title>test_my_site</title>
    <url>/2024/10/07/test-my-site/</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">
  <script id="hbeData" type="hbeData" data-hmacdigest="e1d97e1a8ac8c2211e16b80878e09b93b4fe8748e75b22757bb81c1b78cb65ad">10d79030e8222445804370796b90fca14b3382df4730eb0fe3a9f1aa6acbfdf977f308135c251cf4014cb9472e5eb4c7010efd08fb0e3bdf1ebef1844b47b7bbdce99f87d5af857ca0ff659bfd7ff8403889b6c438821c099230c528e1e072086db67c3268f0c3fbef4285ecdfb74d10c44a10a54b42bc087ce2562c8b1b0d82c747e40ef6687175228e1aa7de665ca0630685dfdfd49a11eb58a99d311c252752a333719030d038bb8d865dd3e440bff3cd209fe3ca3a26fb5772705760421ee28b997bb286ef46d1032c18074a8e2467687ee2de62e54453291130c47094a422bc930e55aadd9d024a587e442f34bf75eb6a08da22b9f89a8b762f5a38a8e3144e980f5d7731a6c69dbdef7260561ec4d7de4af1b2423a2032be5b43ebc41d14c9d3a7e186a0947551028165f104eec39b0dba0f0a31d9c005e6f7d0513cabb90408ef7c89542bb23590f24368cc22f184edbb836c206af1d2ff2bd8ee6219f635c56a2c0622a86a0941de086df384fa5082fbc773b66fa4c77defdf4bd9d39b822ff42df9498af0500f83944a76d10a9c10a4a3396ba60c86aab892c8fe5a2b6a6fd389e92c65d5a03e40fa122568da682f20638acbecf6a6b20ee43c87fa37e41842faf7a46ec5386d305a92eea65dd1997d4f2fb12ec0748a3556a6d7227e7e159b6e71683e348a198b6b37c20ee8e0c602dea347035345b7285257e960f3fca955c08d8b3de54c34bbc9529367569c853707661ca74e66ac783fb5c6045f0e76c9b407ef665d07591e106fd284aa7b4e9127c015680d360e62b9b267bfe8c54a044b5b75965a6c00c1200a0ee99b868ec67be86456fc7bd320791af861883d19375c7a3bc75257993a9a5ecd75dc72b16c35afdadea8adc0fa16ae7a03126e31113ba12a0daef356558ca4a7e0bf2e61b08f118aeea3b33e0791f97e678f09671491900a166cfdae900191c27c9362434082683ad0bfab8aba7578f65207cd9f634b0e810db7c7afbcf4ebfe0354788c3322a9042dcde886d26bf3e59ee3f09ad5bd55d832fd9905656504a4f16a9d0c39985bab64ae13f5f30328ea49099297b1d0da36e2af13bb646f307076d8c00b5517d6d0ba8a493dd4a1ec26f6a5830e20421b1fc100f38436161dac0be25f3fa25c8ae65e19cc3d51e7ed64c89a9d9d2561ede1cf9216ef561325c7a60bc7ef48f98c30cd6895a2eecf8c1886d7eac041361ab4bb5300b3ee5f8142d2b39a2720ddf4e7276accd79adb741780239e89c0a677067ff88b96af465f8f8245202fae30e4c0cb5f6f5e3b3b792e27577c918ded9775e388d0531dd9a4b87300710987882b10e46ca34fa4b5583bc09ed27af8c44a7e477c190275a2f951483418aecfc3d3f8753f8f5a12df02234648e60bcdfa68f6ec4e84023b39e70203b8c0f0b769522fb205ea6e837ad9a5aa</script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-default">
      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>
      </label>
    </div>
  </div>
</div>
<script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>web前端</category>
      </categories>
      <tags>
        <tag>jQuery_1_test</tag>
        <tag>jQuery_1_test2 3</tag>
      </tags>
  </entry>
  <entry>
    <title>jolokia rce vulnerability</title>
    <url>/2024/12/03/jolokia-rce-vulnerability/</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">
  <script id="hbeData" type="hbeData" data-hmacdigest="3b979f00b38bce91e34d3cf5903eaf9838bde0e6324376846f649282b17fc7ac"></script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-default">
      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>
      </label>
    </div>
  </div>
</div>
<script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>java审计</category>
      </categories>
      <tags>
        <tag>java审计</tag>
        <tag>jolokia</tag>
      </tags>
  </entry>
  <entry>
    <title>CVE-2024-5932/CVE-2024-8353 wordpress givewp漏洞分析</title>
    <url>/2025/01/02/CVE-2024-5932-CVE-2024-8353-wordpress%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="前言">前言</h2>
<p>CVE-2024-8353相对于CVE-2024-5932，多了部分绕过的样子，核心利用还是不变的。这个漏洞是个人开发工具的时候作为样本测试分析的，因此没有关注里面的绕过内容。为什么用CVE-2024-8353呢，因为在使用CVE-2024-5932的poc的时候发现无法成功，即使我版本啥的都没问题也还是没成，后续用CVE-2024-8353能够触发payload，因此用它来分析了。</p>
<p>那么正式开始正文，总的来说，在默认设置下，捐款的时候新用户（新的邮箱）会收到一份邮件，该邮件模板中存在{name}，会到达我们的漏洞函数中触发toString方法从而完成pop链</p>
<span id="more"></span>
<h2 id="业务流程分析">业务流程分析</h2>
<ol type="1">
<li>创建 捐款表单</li>
</ol>
<figure>
<img
src="../imgs/CVE-2024-5932-CVE-2024-8353-wordpress%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/image-20250102094406119.png"
alt="image-20250102094406119" />
<figcaption aria-hidden="true">image-20250102094406119</figcaption>
</figure>
<ol start="2" type="1">
<li>虽然各种类型表单都行，我们payload中修改表单id号都能用，但是第二个classic
form发送到请求包才是我们要的格式</li>
</ol>
<figure>
<img
src="../imgs/CVE-2024-5932-CVE-2024-8353-wordpress%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/image-20250102094424113.png"
alt="image-20250102094424113" />
<figcaption aria-hidden="true">image-20250102094424113</figcaption>
</figure>
<ol start="3" type="1">
<li>默认设置就行，添加名字，然后直接发布</li>
</ol>
<figure>
<img
src="../imgs/CVE-2024-5932-CVE-2024-8353-wordpress%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/image-20250102094559148.png"
alt="image-20250102094559148" />
<figcaption aria-hidden="true">image-20250102094559148</figcaption>
</figure>
<ol start="4" type="1">
<li>回到all forms页面，我们能发现已经有我们刚创建的表单了</li>
</ol>
<figure>
<img
src="../imgs/CVE-2024-5932-CVE-2024-8353-wordpress%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/image-20250102094613022.png"
alt="image-20250102094613022" />
<figcaption aria-hidden="true">image-20250102094613022</figcaption>
</figure>
<ol start="5" type="1">
<li>创建新的文章，添加该表单</li>
</ol>
<figure>
<img
src="../imgs/CVE-2024-5932-CVE-2024-8353-wordpress%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/image-20250102094630672.png"
alt="image-20250102094630672" />
<figcaption aria-hidden="true">image-20250102094630672</figcaption>
</figure>
<p>成功</p>
<figure>
<img
src="../imgs/CVE-2024-5932-CVE-2024-8353-wordpress%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/image-20250102094643317.png"
alt="image-20250102094643317" />
<figcaption aria-hidden="true">image-20250102094643317</figcaption>
</figure>
<p>6.捐100，填好以下内容，然后发送请求包（名字不能有数字）</p>
<figure>
<img
src="../imgs/CVE-2024-5932-CVE-2024-8353-wordpress%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/image-20250102094721039.png"
alt="image-20250102094721039" />
<figcaption aria-hidden="true">image-20250102094721039</figcaption>
</figure>
<figure>
<img
src="../imgs/CVE-2024-5932-CVE-2024-8353-wordpress%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/image-20250102094727371.png"
alt="image-20250102094727371" />
<figcaption aria-hidden="true">image-20250102094727371</figcaption>
</figure>
<figure>
<img
src="../imgs/CVE-2024-5932-CVE-2024-8353-wordpress%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/image-20250102094751845.png"
alt="image-20250102094751845" />
<figcaption aria-hidden="true">image-20250102094751845</figcaption>
</figure>
<figure>
<img
src="../imgs/CVE-2024-5932-CVE-2024-8353-wordpress%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/image-20250102094849198.png"
alt="image-20250102094849198" />
<figcaption aria-hidden="true">image-20250102094849198</figcaption>
</figure>
<figure>
<img
src="../imgs/CVE-2024-5932-CVE-2024-8353-wordpress%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/image-20250102094816655.png"
alt="image-20250102094816655" />
<figcaption aria-hidden="true">image-20250102094816655</figcaption>
</figure>
<p>所以我们入口函数从 give_process_donation_form() 开始</p>
<figure>
<img
src="../imgs/CVE-2024-5932-CVE-2024-8353-wordpress%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/image-20250102094830367.png"
alt="image-20250102094830367" />
<figcaption aria-hidden="true">image-20250102094830367</figcaption>
</figure>
<ol start="7" type="1">
<li>在进入正式的代码跟踪前，先说明到底发生了什么。</li>
</ol>
<figure>
<img
src="../imgs/CVE-2024-5932-CVE-2024-8353-wordpress%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/image-20250102094911931.png"
alt="image-20250102094911931" />
<figcaption aria-hidden="true">image-20250102094911931</figcaption>
</figure>
<p>根据描述，发送给新的，使用offline donation的用户（新邮箱）。</p>
<p>除此外我们也能在form表单中的设置中查看到，可以选择全局定义的邮件，就是上图。或是自定义的邮件。</p>
<p>默认使用全局。</p>
<figure>
<img
src="../imgs/CVE-2024-5932-CVE-2024-8353-wordpress%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/image-20250102095134290.png"
alt="image-20250102095134290" />
<figcaption aria-hidden="true">image-20250102095134290</figcaption>
</figure>
<p>点进去该New Offline
Donation发现其邮件内容是使用了{name}标签，在处理该标签的函数中存在我们的漏洞点，触发title属性的toString方法</p>
<figure>
<img
src="../imgs/CVE-2024-5932-CVE-2024-8353-wordpress%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/image-20250102095152941.png"
alt="image-20250102095152941" />
<figcaption aria-hidden="true">image-20250102095152941</figcaption>
</figure>
<h2 id="代码调用链">代码调用链</h2>
<p>多图杀猫警告。</p>
<p>首先入口点</p>
<figure>
<img
src="../imgs/CVE-2024-5932-CVE-2024-8353-wordpress%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/image-20250102095259358.png"
alt="image-20250102095259358" />
<figcaption aria-hidden="true">image-20250102095259358</figcaption>
</figure>
<p>经过以下一系列变换到达我们函数</p>
<figure>
<img
src="../imgs/CVE-2024-5932-CVE-2024-8353-wordpress%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/image-20250102095336395.png"
alt="image-20250102095336395" />
<figcaption aria-hidden="true">image-20250102095336395</figcaption>
</figure>
<figure>
<img
src="../imgs/CVE-2024-5932-CVE-2024-8353-wordpress%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/image-20250102095345847.png"
alt="image-20250102095345847" />
<figcaption aria-hidden="true">image-20250102095345847</figcaption>
</figure>
<figure>
<img
src="../imgs/CVE-2024-5932-CVE-2024-8353-wordpress%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/image-20250102095351067.png"
alt="image-20250102095351067" />
<figcaption aria-hidden="true">image-20250102095351067</figcaption>
</figure>
<figure>
<img
src="../imgs/CVE-2024-5932-CVE-2024-8353-wordpress%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/image-20250102095357497.png"
alt="image-20250102095357497" />
<figcaption aria-hidden="true">image-20250102095357497</figcaption>
</figure>
<p>接下来除了必要说明，会一直贴图顺序调用</p>
<figure>
<img
src="../imgs/CVE-2024-5932-CVE-2024-8353-wordpress%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/image-20250102095450346.png"
alt="image-20250102095450346" />
<figcaption aria-hidden="true">image-20250102095450346</figcaption>
</figure>
<p>通过debug直到进入了give_gateway_offline，这大概是请求包这里自定义的（还记得我们之前业务发送请求包的时候选择的支付方式是offline吗）</p>
<figure>
<img
src="../imgs/CVE-2024-5932-CVE-2024-8353-wordpress%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/image-20250102095553604.png"
alt="image-20250102095553604" />
<figcaption aria-hidden="true">image-20250102095553604</figcaption>
</figure>
<p>查询对应函数</p>
<figure>
<img
src="../imgs/CVE-2024-5932-CVE-2024-8353-wordpress%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/image-20250102095602524.png"
alt="image-20250102095602524" />
<figcaption aria-hidden="true">image-20250102095602524</figcaption>
</figure>
<p>进入对应函数的42到44行，发现是匿名函数的调用</p>
<figure>
<img
src="../imgs/CVE-2024-5932-CVE-2024-8353-wordpress%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/image-20250102095612042.png"
alt="image-20250102095612042" />
<figcaption aria-hidden="true">image-20250102095612042</figcaption>
</figure>
<p>我们从这里继续</p>
<figure>
<img
src="../imgs/CVE-2024-5932-CVE-2024-8353-wordpress%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/image-20250102095845999.png"
alt="image-20250102095845999" />
<figcaption aria-hidden="true">image-20250102095845999</figcaption>
</figure>
<figure>
<img
src="../imgs/CVE-2024-5932-CVE-2024-8353-wordpress%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/image-20250102095851204.png"
alt="image-20250102095851204" />
<figcaption aria-hidden="true">image-20250102095851204</figcaption>
</figure>
<figure>
<img
src="../imgs/CVE-2024-5932-CVE-2024-8353-wordpress%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/image-20250102100127544.png"
alt="image-20250102100127544" />
<figcaption aria-hidden="true">image-20250102100127544</figcaption>
</figure>
<p>其内部实际上也还是执行do_action，如下图</p>
<figure>
<img
src="../imgs/CVE-2024-5932-CVE-2024-8353-wordpress%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/image-20250102100144501.png"
alt="image-20250102100144501" />
<figcaption aria-hidden="true">image-20250102100144501</figcaption>
</figure>
<p>查询对应函数</p>
<figure>
<img
src="../imgs/CVE-2024-5932-CVE-2024-8353-wordpress%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/image-20250102100215578.png"
alt="image-20250102100215578" />
<figcaption aria-hidden="true">image-20250102100215578</figcaption>
</figure>
<figure>
<img
src="../imgs/CVE-2024-5932-CVE-2024-8353-wordpress%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/image-20250102100227867.png"
alt="image-20250102100227867" />
<figcaption aria-hidden="true">image-20250102100227867</figcaption>
</figure>
<p>在 PHP 中，<code>__invoke</code>
是一个魔术方法，当试图将对象当作函数来调用时会被触发。</p>
<p>上面在new了对象后，调用了该对象的__invoke函数</p>
<figure>
<img
src="../imgs/CVE-2024-5932-CVE-2024-8353-wordpress%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/image-20250102100352906.png"
alt="image-20250102100352906" />
<figcaption aria-hidden="true">image-20250102100352906</figcaption>
</figure>
<figure>
<img
src="../imgs/CVE-2024-5932-CVE-2024-8353-wordpress%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/image-20250102100358458.png"
alt="image-20250102100358458" />
<figcaption aria-hidden="true">image-20250102100358458</figcaption>
</figure>
<figure>
<img
src="../imgs/CVE-2024-5932-CVE-2024-8353-wordpress%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/image-20250102100409034.png"
alt="image-20250102100409034" />
<figcaption aria-hidden="true">image-20250102100409034</figcaption>
</figure>
<figure>
<img
src="../imgs/CVE-2024-5932-CVE-2024-8353-wordpress%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/image-20250102100414516.png"
alt="image-20250102100414516" />
<figcaption aria-hidden="true">image-20250102100414516</figcaption>
</figure>
<figure>
<img
src="../imgs/CVE-2024-5932-CVE-2024-8353-wordpress%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/image-20250102100430425.png"
alt="image-20250102100430425" />
<figcaption aria-hidden="true">image-20250102100430425</figcaption>
</figure>
<p>我们可以观察上图传入该函数的content内容</p>
<figure>
<img
src="../imgs/CVE-2024-5932-CVE-2024-8353-wordpress%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/image-20250102100935049.png"
alt="image-20250102100935049" />
<figcaption aria-hidden="true">image-20250102100935049</figcaption>
</figure>
<figure>
<img
src="../imgs/CVE-2024-5932-CVE-2024-8353-wordpress%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/image-20250102100444042.png"
alt="image-20250102100444042" />
<figcaption aria-hidden="true">image-20250102100444042</figcaption>
</figure>
<p>preg_replace_callback是php的方法，简单说就是查询类似{name}
{siteurl}等大括号tag内容，然后执行本对象的do_tag方法</p>
<figure>
<img
src="../imgs/CVE-2024-5932-CVE-2024-8353-wordpress%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/image-20250102100521420.png"
alt="image-20250102100521420" />
<figcaption aria-hidden="true">image-20250102100521420</figcaption>
</figure>
<p>这部分就是对content中每个tag如{site_url}进行识别，然后分配到对应的执行函数中。</p>
<figure>
<img
src="../imgs/CVE-2024-5932-CVE-2024-8353-wordpress%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/image-20250102101000579.png"
alt="image-20250102101000579" />
<figcaption aria-hidden="true">image-20250102101000579</figcaption>
</figure>
<p>通过{name} 的tag，我们进入下一个函数</p>
<figure>
<img
src="../imgs/CVE-2024-5932-CVE-2024-8353-wordpress%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/image-20250102101040714.png"
alt="image-20250102101040714" />
<figcaption aria-hidden="true">image-20250102101040714</figcaption>
</figure>
<p>可以查看该参数内容，title就是我们注入点</p>
<figure>
<img
src="../imgs/CVE-2024-5932-CVE-2024-8353-wordpress%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/image-20250102101049069.png"
alt="image-20250102101049069" />
<figcaption aria-hidden="true">image-20250102101049069</figcaption>
</figure>
<p>如果进去give_get_payment_meta_user_info()内部的话，会发现它实际上是根据payment_id提取数据，然后进行了反序列化(maybe_unserialize是wordpress的检查并反序列化函数)。</p>
<figure>
<img
src="../imgs/CVE-2024-5932-CVE-2024-8353-wordpress%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/1.png"
alt="file://C:/Users/admin/AppData/Local/Temp/.B333Z2/1.png" />
<figcaption
aria-hidden="true">file://C:/Users/admin/AppData/Local/Temp/.B333Z2/1.png</figcaption>
</figure>
<p>回到刚才继续进入到give_get_email_names中</p>
<figure>
<img
src="../imgs/CVE-2024-5932-CVE-2024-8353-wordpress%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/image-20250102101242437.png"
alt="image-20250102101242437" />
<figcaption aria-hidden="true">image-20250102101242437</figcaption>
</figure>
<figure>
<img
src="../imgs/CVE-2024-5932-CVE-2024-8353-wordpress%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/image-20250102101247633.png"
alt="image-20250102101247633" />
<figcaption aria-hidden="true">image-20250102101247633</figcaption>
</figure>
<figure>
<img
src="../imgs/CVE-2024-5932-CVE-2024-8353-wordpress%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/image-20250102101253721.png"
alt="image-20250102101253721" />
<figcaption aria-hidden="true">image-20250102101253721</figcaption>
</figure>
<p>最终到达上图的漏洞点，title的反序列化对象能触发tostring方法。</p>
<h2 id="利用链">利用链</h2>
<p>说实话让我构建我肯定构建不出来，而且这也不是我的重点，所以我就把分析过程简单放在下面了。</p>
<p>payload如下</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">\O:19:&quot;Stripe\\\\StripeObject&quot;:1:&#123;s:10:&quot;\0*\0_values&quot;;a:1:&#123;s:3:&quot;foo&quot;;O:62:&quot;Give\\\\PaymentGateways\\\\DataTransferObjects\\\\GiveInsertPaymentData&quot;:1:&#123;s:8:&quot;userInfo&quot;;a:1:&#123;s:7:&quot;address&quot;;O:4:&quot;Give&quot;:1:&#123;s:12:&quot;\0*\0container&quot;;O:33:&quot;Give\\\\Vendors\\\\Faker\\\\ValidGenerator&quot;:3:&#123;s:12:&quot;\0*\0validator&quot;;s:10:&quot;shell_exec&quot;;s:12:&quot;\0*\0generator&quot;;O:34:&quot;Give\\\\Onboarding\\\\SettingsRepository&quot;:1:&#123;s:11:&quot;\0*\0settings&quot;;a:1:&#123;s:8:&quot;address1&quot;;s:4:&quot;calc&quot;;&#125;&#125;s:13:&quot;\0*\0maxRetries&quot;;i:10;&#125;&#125;&#125;&#125;&#125;&#125;</span><br></pre></td></tr></table></figure>
<figure>
<img
src="../imgs/CVE-2024-5932-CVE-2024-8353-wordpress%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/image-20250102102426340.png"
alt="image-20250102102426340" />
<figcaption aria-hidden="true">image-20250102102426340</figcaption>
</figure>
<p>直接从StripeObject类的__tostring方法开始</p>
<figure>
<img
src="../imgs/CVE-2024-5932-CVE-2024-8353-wordpress%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/image-20250102101615455.png"
alt="image-20250102101615455" />
<figcaption aria-hidden="true">image-20250102101615455</figcaption>
</figure>
<figure>
<img
src="../imgs/CVE-2024-5932-CVE-2024-8353-wordpress%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/image-20250102101629885.png"
alt="image-20250102101629885" />
<figcaption aria-hidden="true">image-20250102101629885</figcaption>
</figure>
<p>获取字典_values中每个key对应的value</p>
<figure>
<img
src="../imgs/CVE-2024-5932-CVE-2024-8353-wordpress%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/image-20250102101643310.png"
alt="image-20250102101643310" />
<figcaption aria-hidden="true">image-20250102101643310</figcaption>
</figure>
<p>根据payload内容直到，我们是只有一个userInfo属性的GiveInsertPaymentData对象</p>
<figure>
<img
src="../imgs/CVE-2024-5932-CVE-2024-8353-wordpress%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/image-20250102103103015.png"
alt="image-20250102103103015" />
<figcaption aria-hidden="true">image-20250102103103015</figcaption>
</figure>
<figure>
<img
src="../imgs/CVE-2024-5932-CVE-2024-8353-wordpress%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/image-20250102103011266.png"
alt="image-20250102103011266" />
<figcaption aria-hidden="true">image-20250102103011266</figcaption>
</figure>
<p>继续</p>
<figure>
<img
src="../imgs/CVE-2024-5932-CVE-2024-8353-wordpress%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/image-20250102103134879.png"
alt="image-20250102103134879" />
<figcaption aria-hidden="true">image-20250102103134879</figcaption>
</figure>
<figure>
<img
src="../imgs/CVE-2024-5932-CVE-2024-8353-wordpress%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/image-20250102103143356.png"
alt="image-20250102103143356" />
<figcaption aria-hidden="true">image-20250102103143356</figcaption>
</figure>
<figure>
<img
src="../imgs/CVE-2024-5932-CVE-2024-8353-wordpress%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/image-20250102103153730.png"
alt="image-20250102103153730" />
<figcaption aria-hidden="true">image-20250102103153730</figcaption>
</figure>
<figure>
<img
src="../imgs/CVE-2024-5932-CVE-2024-8353-wordpress%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/image-20250102103201048.png"
alt="image-20250102103201048" />
<figcaption aria-hidden="true">image-20250102103201048</figcaption>
</figure>
<p>userInfo['address']
中的内容是一个类对象Give，上图中赋值语句触发了Give对象的_get方法</p>
<figure>
<img
src="../imgs/CVE-2024-5932-CVE-2024-8353-wordpress%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/image-20250102103637000.png"
alt="image-20250102103637000" />
<figcaption aria-hidden="true">image-20250102103637000</figcaption>
</figure>
<figure>
<img
src="../imgs/CVE-2024-5932-CVE-2024-8353-wordpress%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/image-20250102103648780.png"
alt="image-20250102103648780" />
<figcaption aria-hidden="true">image-20250102103648780</figcaption>
</figure>
<p>上图中触发container对象ValidGenerator的get方法，但实际上并不存在，因此触发该对象的__call方法，即我们最终调用函数的方法</p>
<figure>
<img
src="../imgs/CVE-2024-5932-CVE-2024-8353-wordpress%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/image-20250102103808056.png"
alt="image-20250102103808056" />
<figcaption aria-hidden="true">image-20250102103808056</figcaption>
</figure>
<p>我们可以观察方法传入了什么参数</p>
<figure>
<img
src="../imgs/CVE-2024-5932-CVE-2024-8353-wordpress%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/image-20250102103846223.png"
alt="image-20250102103846223" />
<figcaption aria-hidden="true">image-20250102103846223</figcaption>
</figure>
<figure>
<img
src="../imgs/CVE-2024-5932-CVE-2024-8353-wordpress%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/image-20250102103850477.png"
alt="image-20250102103850477" />
<figcaption aria-hidden="true">image-20250102103850477</figcaption>
</figure>
<p>然后再看看执行参数分别是什么内容</p>
<p><img
src="../imgs/CVE-2024-5932-CVE-2024-8353-wordpress%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/image-20250102104403036.png"
alt="image-20250102104403036" /><img
src="../imgs/CVE-2024-5932-CVE-2024-8353-wordpress%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/image-20250102104417980.png"
alt="image-20250102104417980" /><img
src="../imgs/CVE-2024-5932-CVE-2024-8353-wordpress%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/image-20250102104441820.png"
alt="image-20250102104441820" /></p>
<p>payload中我们知道generator中的对象是
SettingsRepository，他确实有个对象get</p>
<figure>
<img
src="../imgs/CVE-2024-5932-CVE-2024-8353-wordpress%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/image-20250102104703241.png"
alt="image-20250102104703241" />
<figcaption aria-hidden="true">image-20250102104703241</figcaption>
</figure>
<p>简单说，执行settingsRepository的get()函数，获取了address1中的字符串calc</p>
<figure>
<img
src="../imgs/CVE-2024-5932-CVE-2024-8353-wordpress%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/image-20250102104934451.png"
alt="image-20250102104934451" />
<figcaption aria-hidden="true">image-20250102104934451</figcaption>
</figure>
<p>最后根据maxRetries，调用了maxRetries次数的最终执行
shell_exec('calc')</p>
<figure>
<img
src="../imgs/CVE-2024-5932-CVE-2024-8353-wordpress%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/image-20250102104950996.png"
alt="image-20250102104950996" />
<figcaption aria-hidden="true">image-20250102104950996</figcaption>
</figure>
<h2 id="参考链接">参考链接</h2>
<ol type="1">
<li>https://xz.aliyun.com/t/15699?time__1311=GqjxnieDqYqmqGNPeeqBK0QG8W7vTwh3EbD</li>
<li>https://github.com/EQSTLab/CVE-2024-8353/tree/main</li>
</ol>
]]></content>
      <categories>
        <category>php审计</category>
      </categories>
      <tags>
        <tag>php审计</tag>
        <tag>wordpress</tag>
      </tags>
  </entry>
</search>
